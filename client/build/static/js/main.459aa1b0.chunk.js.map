{"version":3,"sources":["components/update/play.svg","components/setlog/play.svg","components/reboot/reboot.js","components/log/log.js","components/uploadTwin/uploadTwin.js","components/common/styledProgressBar.js","components/update/update.js","components/fileupload/fileupload.js","components/setlog/setlog.js","components/main/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","process","REACT_APP_VM_SERVER","REACT_APP_REBOOT","Reboot","state","rebootStatus","rebootStatusLoading","getStatus","_this","setState","axios","method","url","then","response","console","log","Object","objectSpread","data","catch","err","showStatus","status","key","react_default","a","createElement","index","rebootType","this","_this2","_this$state","className","length","map","type","onClick","Component","UploadTwin","REACT_APP_UPDATE_REBOOT","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logMessage","e","preventDefault","deviceID","message","logging","headers","Access-Control-Allow-Origin","Content-Type","Access-Control-Allow-Headers","Access-Control-Allow-Methods","reboot","alert","handleInput","_e$target","target","name","value","_this$state2","onSubmit","REACT_APP_UPDATE_TWIN","updateTwin","softwareVersion","updateTwinLoading","software_version","htmlFor","id","aria-describedby","placeholder","onChange","StyledProgressbar","dist_default","percentage","text","strokeWidth","styles","root","path","stroke","strokeLinecap","transition","trail","fill","fontSize","REACT_APP_GETSTATUS","Update","getFirmwareLoading","firmwareStatuses","otaStatus","currentVersion","pendingVersion","style","width","styledProgressBar","concat","uploadTwin_UploadTwin","cursor","data-toggle","data-target","role","aria-expanded","aria-controls","src","require","alt","textAlign","REACT_APP_SERVER","REACT_APP_GETBLOBS","REACT_APP_UPLOADBLOB","columns","Header","accessor","resizable","Cell","href","FileUpload","uploadFirmware","selectedFile","uploadFirmwareLoading","formData","FormData","append","post","content-type","getBlobDetails","error","document","getElementById","getBlobsLoading","blobs","handleselectedFile","event","files","es","pageSizeOptions","loading","showPagination","defaultPageSize","loadingText","noDataText","accept","SetLog","updateSet","buttonstatus","settime","time","onBlur","Main","color","aria-labelledby","data-parent","fileupload_FileUpload","update_Update","log_UploadTwin","reboot_Reboot","setlog_SetLog","App","BrowserRouter","Switch","Route","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.459aa1b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.25419525.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.25419525.svg\";","import React, { Component } from \"react\";\nimport axios from \"axios\";\nconst { REACT_APP_VM_SERVER, REACT_APP_REBOOT } = process.env;\n\nexport default class Reboot extends Component {\n  state = {\n    rebootStatus: [],\n    rebootStatusLoading: false\n  };\n  componentWillMount() {\n    this.getStatus();\n  }\n\n  getStatus = () => {\n    this.setState({ rebootStatusLoading: true });\n    axios({\n      method: \"get\",\n      url: REACT_APP_VM_SERVER + REACT_APP_REBOOT\n    })\n      .then(response => {\n        console.log(response);\n        this.setState({ rebootStatus: [{ ...response.data }] });\n        this.setState({ rebootStatusLoading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ rebootStatusLoading: false });\n      });\n  };\n  showStatus = (status, key) => {\n    return (\n      <div index={key}>\n        <p><b>Reboot status:</b>&nbsp;<span>{status.status?status.status:'--'}</span></p><br/>\n        <p><b>Reboot type:</b>&nbsp;<span>{status.rebootType}</span></p>\n      </div>\n    )\n  }\n  render() {\n    const { rebootStatus, rebootStatusLoading } = this.state;\n    return (\n      <div className=\"box-it\">\n        {rebootStatus.length ? (\n          rebootStatus.map((status, index) => this.showStatus(status, index))\n        ) : (\n          <div>\n            <p><b>Reboot status:</b>&nbsp;<span>{'--'}</span></p><br/>\n            <p><b>Reboot type:</b>&nbsp;<span>{'--'}</span></p>\n          </div>\n        )}\n        <button type=\"button\" className=\"fluid-btn\" onClick={this.getStatus}>\n          {rebootStatusLoading ? \"Refreshing..\" : \"Refresh\"}\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./log.css\";\nconst { REACT_APP_VM_SERVER, REACT_APP_UPDATE_REBOOT } = process.env;\n\nexport default class UploadTwin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deviceID: \"\",\n      message: \"\",\n      logging:false\n    };\n  }\n  logMessage = e => {\n    e.preventDefault();\n    const { deviceID, message } = this.state;\n      this.setState({ logging: true });\n      axios({\n        method: \"post\",\n        url: REACT_APP_VM_SERVER + 'updatereboot',\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\n          \"Access-Control-Allow-Methods\": \"POST\"\n        },\n        data: {\n          \"reboot\": \"true\"\n        }\n      })\n        .then(response => {\n          console.log(response);\n          alert('Reboot successfully')\n          this.setState({ logging: false, deviceID:'', message:'' });\n        })\n        .catch(err => {\n          console.log(err);\n          alert('Error in Reboot.')\n          this.setState({ logging: false });\n        });\n  };\n  handleInput = e => {\n    const { name, value } = e.target;\n    if (name === \"deviceID\") {\n      this.setState({ deviceID: value });\n    }else if (name === \"message\") {\n      this.setState({ message: value });\n    }\n  };\n  render() {\n    const { deviceID, message, logging } = this.state;\n    return (\n      <div className=\"box-it\">\n        <form onSubmit={this.logMessage}>\n          {\n            /*\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"deviceID\"\n              value={deviceID}\n              name=\"deviceID\"\n              placeholder=\"Enter device ID..\"\n              onChange={this.handleInput}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              value={message}\n              name=\"message\"\n              className=\"form-control\"\n              id=\"message\"\n              placeholder=\"Enter message..\"\n              onChange={this.handleInput}\n            />\n          </div>\n          */\n          }\n          <button type=\"submit\" className=\"cust-btn\">\n            {logging?'Rebooting..':'Reboot'}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./uploadTwin.css\";\nconst { REACT_APP_VM_SERVER, REACT_APP_UPDATE_TWIN } = process.env;\n\nexport default class UploadTwin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      softwareVersion: \"1.0.0.006\",\n      updateTwinLoading: false,\n      reboot:\"True\",\n      url:\n        \"https://wrdm2chetanpackage.blob.core.windows.net/wrdm2-package-file-chetan/package.tar.gz\"\n    };\n  }\n  updateTwin = e => {\n    e.preventDefault();\n    const { softwareVersion, url, reboot } = this.state;\n    if (softwareVersion === \"\" || url === \"\") {\n      alert(\"Please enter all the fields\");\n    } else {\n      this.setState({ updateTwinLoading: true });\n      axios({\n        method: \"post\",\n        url: REACT_APP_VM_SERVER + REACT_APP_UPDATE_TWIN ,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\n          \"Access-Control-Allow-Methods\": \"POST\"\n        },\n        data: {\n          software_version: softwareVersion,\n          url: url\n          //reboot: reboot\n        }\n      })\n        .then(response => {\n          console.log(response);\n          alert('Firmware updated successfully')\n          this.setState({ updateTwinLoading: false });\n        })\n        .catch(err => {\n          console.log(err);\n          alert('Error in Firmware update')\n          this.setState({ updateTwinLoading: false });\n        });\n    }\n  };\n  handleInput = e => {\n    const { name, value } = e.target;\n    if (name === \"url\") {\n      this.setState({ url: value });\n    }\n    if (name === \"reboot\") {\n      this.setState({ reboot: value });\n    }\n    if (name === \"softwareVersion\") {\n      this.setState({ softwareVersion: value });\n    }\n  };\n  render() {\n    const { url, softwareVersion, updateTwinLoading, reboot } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.updateTwin}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Software version</label>\n            <input\n              type=\"software-version\"\n              className=\"form-control\"\n              id=\"software\"\n              value={softwareVersion}\n              name=\"softwareVersion\"\n              aria-describedby=\"softwareHelp\"\n              placeholder=\"Enter software version\"\n              onChange={this.handleInput}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Blob URL</label>\n            <input\n              type=\"text\"\n              value={url}\n              name=\"url\"\n              className=\"form-control\"\n              id=\"blobUrl\"\n              placeholder=\"Enter Blob URL\"\n              onChange={this.handleInput}\n            />\n          </div>\n          {\n            /*\n              <div className=\"form-group\">\n                <label htmlFor=\"rebootType\">Reboot</label>\n                <select className=\"form-control\" id=\"rebootType\" value={reboot}\n                  name=\"reboot\" onChange={this.handleInput}>\n                  <option>True</option>\n                  <option>False</option>\n                </select>\n              </div>\n              */\n          }\n          <button type=\"submit\" className=\"cust-btn\">\n            {updateTwinLoading?'Updating Firmware..':'Update firmware'}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport CircularProgressbar from 'react-circular-progressbar';\n\nfunction StyledProgressbar(props) {\n  return (\n    <CircularProgressbar\n      percentage={props.percentage}\n      text={props.text}\n      // Path width must be customized with strokeWidth,\n      // since it informs dimension calculations.\n      strokeWidth={5}\n      // You can override styles either by specifying this \"styles\" prop,\n      // or by overriding the default CSS here:\n      // https://github.com/iqnivek/react-circular-progressbar/blob/master/src/styles.css\n      styles={{\n        // Customize the root svg element\n        root: {},\n        // Customize the path, i.e. the part that's \"complete\"\n        path: {\n          // Tweak path color:\n          stroke: '#2c55ba',\n          // Tweak path to use flat or rounded ends:\n          strokeLinecap: 'butt',\n          // Tweak transition animation:\n          transition: 'stroke-dashoffset 0.5s ease 0s',\n        },\n        // Customize the circle behind the path\n        trail: {\n          // Tweak the trail color:\n          stroke: '#d6d6d6',\n        },\n        // Customize the text\n        text: {\n          // Tweak text color:\n          fill: '#2c55ba',\n          // Tweak text size:\n          fontSize: '30px',\n        },\n      }}\n    />\n  );\n}\nexport default StyledProgressbar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UploadTwin from \"../uploadTwin/uploadTwin\";\nimport \"./update.css\";\nimport StyledProgressbar from \"../common/styledProgressBar\";\nconst { REACT_APP_VM_SERVER, REACT_APP_GETSTATUS } = process.env;\nexport default class Update extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firmwareStatuses: [],\n      getFirmwareLoading: false\n    };\n  }\n\n  componentWillMount() {\n    this.getStatus();\n  }\n\n  getStatus = () => {\n    this.setState({ getFirmwareLoading: true });\n    axios({\n      method: \"get\",\n      url: REACT_APP_VM_SERVER + REACT_APP_GETSTATUS\n    })\n      .then(response => {\n        console.log(response);\n        this.setState({ firmwareStatuses: [{ ...response.data }] });\n        this.setState({ getFirmwareLoading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ getFirmwareLoading: false });\n      });\n  };\n\n  showStatus = (status, index) => {\n    let percentage = 0;\n    switch (status.otaStatus) {\n      case \"WaitingForUpdate\":\n        percentage = 5;\n        break;\n      case \"SoftwareUpdateinProgress\":\n        percentage = 15;\n        break;\n      case \"DownloadComplete\":\n        percentage = 25;\n        break;\n      case \"UnzipComplete\":\n        percentage = 40;\n        break;\n      case \"ReadPackageDataComplete\":\n        percentage = 55;\n        break;\n      case \"PreInstallComplete\":\n        percentage = 70;\n        break;\n      case \"InstallComplete\":\n        percentage = 85;\n        break;\n      case \"SoftwareUpdateComplete\":\n        percentage = 100;\n        break;\n      default:\n        percentage = 0;\n    }\n    return (\n      <div className=\"status-container\" key={index}>\n        <div className=\"status-details-container\">\n          <b>OTA Status: </b>\n          <span>{status.otaStatus}</span>\n          <br />\n          <b>Current version: </b>\n          <span>{status.currentVersion}</span>\n          <br />\n          <b>Pending Status: </b>\n          <span>{status.pendingVersion}</span>\n          <br />\n        </div>\n        <div style={{ width: \"76px\" }}>\n          <StyledProgressbar percentage={percentage} text={`${percentage}%`} />\n        </div>\n      </div>\n    );\n  };\n  render() {\n    const { firmwareStatuses, getFirmwareLoading } = this.state;\n    return (\n      <div>\n        <div className=\"row update-row\">\n          <div className=\"col-6\">\n            <UploadTwin />\n          </div>\n          <div className=\"col-6\">\n            <div className=\"accordion\" id=\"accordionExample\">\n              <div className=\"card\">\n                <div className=\"card-header toggle-card\" id=\"headingOne\">\n                  <div\n                    className=\"row\"\n                    style={{ cursor: \"pointer\" }}\n                    data-toggle=\"collapse\"\n                    data-target=\"#toggleFirmware\"\n                    role=\"button\"\n                    aria-expanded=\"false\"\n                    aria-controls=\"toggleFirmware\"\n                  >\n                    <img\n                      className=\"img-upload\"\n                      src={require(\"./play.svg\")}\n                      alt=\"...\"\n                      data-toggle=\"modal\"\n                      data-target=\"#showFirmwareDetails\"\n                    />\n                    <p className=\"col-10 upload-text\">Status</p>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"collapse multi-collapse\" id=\"toggleFirmware\">\n                    <div className=\"card firm-card\">\n                      <div className=\"card-body\">\n                        {firmwareStatuses.length?firmwareStatuses.map((status, index) =>\n                          this.showStatus(status, index)\n                        ):<p style={{'textAlign': 'center'}}>No records found</p>}\n                      </div>\n                      <div className=\"toogle-footer\">\n                        <button type=\"button\" className=\"cust-btn\">\n                          View Logs\n                        </button>\n                        <button type=\"button\" className=\"cust-btn\" onClick={this.getStatus}>\n                          {getFirmwareLoading?'Refreshing..':'Refresh'}\n                        </button>\n                        {/* <img\n                          className=\"close-firm\"\n                          src={require(\"./close.svg\")}\n                          title=\"close\"\n                          alt=\"...\"\n                        />\n                        <img\n                          className=\"upload-firm\"\n                          src={require(\"./upload.svg\")}\n                          title=\"upload\"\n                          alt=\"...\"\n                        />\n                        <img\n                          className=\"send-firm\"\n                          src={require(\"./send.svg\")}\n                          title=\"send\"\n                          alt=\"...\"\n                        /> */}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport \"./fileupload.css\";\nconst {\n  REACT_APP_SERVER,\n  REACT_APP_GETBLOBS,\n  REACT_APP_UPLOADBLOB\n} = process.env;\nconst columns = [\n  {\n    Header: \"Name\",\n    accessor: \"name\" // String-based value accessors!\n  },\n  {\n    Header: \"Download Link\",\n    resizable: true,\n    accessor: \"name\",\n    Cell: props => (\n      <a\n        href={`https://wrdm2chetanpackage.blob.core.windows.net/firmware/${\n          props.value\n        }`}\n      >\n        Link\n      </a>\n    )\n  },\n  {\n    Header: \"Date\",\n    accessor: \"lastModified\"\n  }\n];\nexport default class FileUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blobs: [],\n      getBlobsLoading: false,\n      uploadFirmwareLoading: false\n    };\n  }\n\n  componentWillMount() {\n    this.getBlobDetails();\n  }\n\n  uploadFirmware = () => {\n    if (this.state.selectedFile) {\n      this.setState({ uploadFirmwareLoading: true });\n      const formData = new FormData();\n      formData.append(\"firmare\", this.state.selectedFile);\n      const config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Headers\":\"Authorization, Content-Type\",\n          \"Access-Control-Allow-Methods\": \"POST\"\n        }\n      };\n      axios\n        .post(REACT_APP_SERVER + REACT_APP_UPLOADBLOB, formData, config)\n        .then(response => {\n          console.log(\"ki\", response);\n          this.setState({ uploadFirmwareLoading: false });\n          if (response.data.status) {\n            alert(response.data.message);\n            this.getBlobDetails();\n          } else {\n            alert(response.data.message);\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          alert(\"Error in upload\");\n          this.setState({ uploadFirmwareLoading: false });\n        });\n      document.getElementById(\"file\").value = \"\";\n      this.setState({ selectedFile: null });\n    } else {\n      alert(\"Please select a file\");\n    }\n  };\n\n  getBlobDetails = () => {\n    this.setState({ getBlobsLoading: true });\n    axios({\n      method: \"get\",\n      url: REACT_APP_SERVER + REACT_APP_GETBLOBS\n    })\n      .then(response => {\n        console.log(response);\n        if (response.data.status) {\n          this.setState({ blobs: response.data.blobs });\n        }\n        this.setState({ getBlobsLoading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ getBlobsLoading: false });\n      });\n  };\n\n  handleselectedFile = event => {\n    event.preventDefault();\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n  render() {\n    const { blobs, getBlobsLoading } = this.state;\n    return (\n      <div>\n        <ReactTable\n          data={blobs}\n          columns={columns}\n          pageSizeOptions={[3]}\n          loading={getBlobsLoading}\n          showPagination={true}\n          defaultPageSize={3}\n          width={170}\n          loadingText={\"Fetching firmwares..\"}\n          noDataText={\"No Firmwares found..\"}\n        />\n        <div className=\"upload-container\">\n          <label>\n            <b>Upload Firmware file to blob: </b>\n          </label>\n          <div className=\"input-group mb-3\">\n            <div className=\"custom-file\">\n              <input\n                id=\"file\"\n                type=\"file\"\n                accept=\".gz, .zip\"\n                onChange={this.handleselectedFile}\n                name=\"myFile\"\n              />\n              <br />\n              <br />\n            </div>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"cust-btn\"\n                onClick={this.uploadFirmware}\n              >\n                Upload File\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadTwin from \"../uploadTwin/uploadTwin\";\r\nimport \"./setlog.css\";\r\nimport StyledProgressbar from \"../common/styledProgressBar\";\r\nconst { REACT_APP_VM_SERVER, REACT_APP_GETSTATUS } = process.env;\r\nexport default class SetLog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            settime: null,\r\n            buttonstatus: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    updateSet = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            buttonstatus: true\r\n        })\r\n\r\n        if (this.state.settime == null) {\r\n            this.setState({\r\n                buttonstatus: false, settime: null\r\n            })\r\n            alert(\"Please enter all the fields\");\r\n        } else {\r\n            this.setState({ updateTwinLoading: true });\r\n            axios({\r\n                method: \"post\",\r\n                url: \"https://wrdm2-dockerbottleapi-chetan.azurewebsites.net/updatelogtime\",\r\n                headers: {\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Access-Control-Allow-Headers\": \"Authorization, Content-Type\",\r\n                    \"Access-Control-Allow-Methods\": \"POST\"\r\n                },\r\n                data: {\r\n                    time: this.state.settime\r\n                }\r\n            })\r\n                .then(response => {\r\n                    console.log(response);\r\n                    this.setState({\r\n                        buttonstatus: false, settime: null\r\n                    })\r\n                    alert(\"Updated Successfully\")\r\n                    //document.getElementById(\"software\").value=null\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    alert('Error in time update')\r\n                    this.setState({\r\n                        buttonstatus: false, settime: null\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    handleInput = e => {\r\n        const { name, value } = e.target;\r\n        if (name === \"settime\") {\r\n            this.setState({ settime: value });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row update-row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"accordion\" id=\"accordionExample\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header toggle-card\" id=\"headingOne\">\r\n                                    <div\r\n                                        className=\"row\"\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        data-toggle=\"collapse\"\r\n                                        data-target=\"#toggleFirmware\"\r\n                                        role=\"button\"\r\n                                        aria-expanded=\"false\"\r\n                                        aria-controls=\"toggleFirmware\"\r\n                                    >\r\n                                        <img\r\n                                            className=\"img-upload\"\r\n                                            src={require(\"./play.svg\")}\r\n                                            alt=\"...\"\r\n                                            data-toggle=\"modal\"\r\n                                            data-target=\"#showFirmwareDetails\"\r\n                                        />\r\n                                        <p className=\"col-8 upload-text\">Set Log Time</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"collapse multi-collapse\" id=\"toggleFirmware\">\r\n                                        <div className=\"card firm-card\">\r\n                                            <div className=\"card-body\">\r\n                                                <form onSubmit={this.updateSet}>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"exampleInputEmail1\">Logging Time Interval (in Min)</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            id=\"software\"\r\n                                                            value={this.state.settime}\r\n                                                            name=\"settime\"\r\n                                                            aria-describedby=\"softwareHelp\"\r\n                                                            placeholder=\"Duration in min\"\r\n                                                            onBlur={this.handleInput}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <button type=\"button\" className=\"cust-btn\" onClick={this.updateSet}>\r\n                                                        {this.state.buttonstatus ? \"Setting..\" : \"Set\"}\r\n                                                    </button>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\nimport Reboot from \"../reboot/reboot\";\nimport Log from '../log/log';\nimport Update from \"../update/update\";\nimport FileUpload from \"../fileupload/fileupload\";\nimport SetLog from \"../setlog/setlog\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"container cust-home\">\n          <div className=\"accordion\" id=\"accordionExample\">\n            <div className=\"card\">\n              <div className=\"card-header custom-header\" id=\"headingOne\">\n                <h5 className=\"mb-0\">\n                  <a\n                    href=\"false\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#collapseOne\"\n                    aria-expanded=\"true\"\n                    aria-controls=\"collapseOne\"\n                    style={{'color': 'white'}}\n                  >\n                    <span className=\"fa fa-tasks\" />\n                    <label>\n                      <b>&nbsp;&nbsp;Available Firmwares: </b>\n                    </label>\n                    <i className=\"fa fa-angle-down pull-right\" />\n                  </a>\n                </h5>\n              </div>\n\n              <div\n                id=\"collapseOne\"\n                className=\"collapse show\"\n                aria-labelledby=\"headingOne\"\n                data-parent=\"#accordionExample\"\n              >\n                <div className=\"card-body\">\n                  <FileUpload />\n                </div>\n              </div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-header custom-header\" id=\"headingTwo\">\n                <h5 className=\"mb-0\">\n                  <a\n                    href=\"false\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#collapseTwo\"\n                    aria-expanded=\"false\"\n                    aria-controls=\"collapseTwo\"\n                    style={{'color': 'white'}}\n                  >\n                    <span className=\"fa fa-spinner\" />\n                    <label>\n                      <b>&nbsp;&nbsp;Firmware upload: </b>\n                    </label>\n                    <i className=\"fa fa-angle-down pull-right\" />\n                  </a>\n                </h5>\n              </div>\n              <div\n                id=\"collapseTwo\"\n                className=\"collapse\"\n                aria-labelledby=\"headingTwo\"\n                data-parent=\"#accordionExample\"\n              >\n                <div className=\"card-body\">\n                  <Update />\n                </div>\n              </div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-header custom-header\" id=\"headingThree\">\n                <h5 className=\"mb-0\">\n                  <a\n                    href=\"false\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#collapseThree\"\n                    aria-expanded=\"false\"\n                    aria-controls=\"collapseThree\"\n                    style={{'color': 'white'}}\n                  >\n                    <span className=\"fa fa-desktop\" />\n                    <label>\n                      <b>&nbsp;&nbsp;Reboot status and logs: </b>\n                    </label>\n                    <i className=\"fa fa-angle-down pull-right\" />\n                  </a>\n                </h5>\n              </div>\n              <div\n                id=\"collapseThree\"\n                className=\"collapse\"\n                aria-labelledby=\"headingThree\"\n                data-parent=\"#accordionExample\"\n              >\n                <div className=\"card-body\">\n                  <div className=\"row\">\n                  {\n                    \n                    <div className=\"col-6\">\n                      \n                        <Log />\n                        <Reboot />\n\n                      \n                    </div>\n                    \n                  }\n                    <div className=\"col-6\">\n\n                      <SetLog />\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Main from './components/main/main';\nimport './App.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Main} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}